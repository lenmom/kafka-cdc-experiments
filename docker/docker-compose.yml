---
# Docker-Compose file to run 
# - a Kafka cluster with 3 Kafka brokers and 1 Zookeeper node 
# - a Schema Registry instance 
# - a Kafka Connect instance, including Debezium CDC connector
# - a MySQL instance
#
# Usage:
# - export HOST_IP env variable to the external IP of the machine (NOT to localhost)
# - docker-compose up -d
#
# Kafka brokers are accessible from the host machine on (PLAINTEXT only):
#   kafka1: localhost:9092
#   kafka2: localhost:9093
#   kafka3: localhost:9094
# (Note that, from within the Docker compose "cluster" other services reach brokers on port 19092, 19093, 19094 respectively) 
#  
# Zookeper node is accessible from the host machine on:
#   zk1: localhost:2181
# 
# Schema-Registry is accessible from the host machine on:
#   schema-registry: http://localhost:8081
#
# Kafka Connect on http://localhost:8083
#
# MySQL exposed on localhost:33306 (root pwd: "my-password")

version: '2.2'

services:
  zk1:
    image: confluentinc/cp-zookeeper:5.1.0
    hostname: zk1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#      ZOOKEEPER_INIT_LIMIT: 5
#      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zk1:12888:13888


  kafka1:
    image: confluentinc/cp-kafka:5.1.0
    hostname: kafka1
    ports:
      - "9092:9092"
    depends_on:
      - zk1
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true" # Kafka Connect does not create topics explicitly
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "false"

  kafka2:
    image: confluentinc/cp-kafka:5.1.0
    hostname: kafka2
    ports:
      - "9093:9093"
    depends_on:
      - zk1
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true" # Kafka Connect does not create topics explicitly
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "false"

  kafka3:
    image: confluentinc/cp-kafka:5.1.0
    hostname: kafka3
    ports:
      - "9094:9094"
    depends_on:
      - zk1
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19094,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zk1:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true" # Kafka Connect does not create topics explicitly
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "false"

  schema-registry:
    image: confluentinc/cp-schema-registry:5.1.0
    hostname: schema-registry
    ports:
      - "8081:8081"
    depends_on:
      - zk1
      - kafka1
      - kafka2
      - kafka3
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:19092,PLAINTEXT://kafka2:19093,PLAINTEXT://kafka3:19094
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081


  db:
    image: example-db
    hostname: db
    build:
      context: ./example-db
    ports:
      - "33306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "my-password"



  kafka-connect:
    image: kconnect
    hostname: kafka-connect
    build:
      context: ./kconnect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:19092,PLAINTEXT://kafka2:19093,PLAINTEXT://kafka3:19094
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter # Snapshots keys are Strings
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter # Snapshots messages are AVRO
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter" 
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/etc/kafka-connect/jars"
    depends_on:
      - zk1
      - kafka1
      - kafka2
      - kafka3
      - schema-registry
    
